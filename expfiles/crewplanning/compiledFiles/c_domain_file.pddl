(define (domain cCrewPlanning)
	(:requirements :typing :durative-actions :fluents)
	(:types MedicalState - objects FilterState - objects agent - objects PayloadAct - objects Day - objects ExerEquipment - objects RPCM - objects)
	(:constants d0 - Day d1 - Day d2 - Day c1 - agent c2 - agent mcs1 - MedicalState mcs2 - MedicalState spaceshipFilter - FilterState pa1_1 - PayloadAct pa1_2 - PayloadAct pa1_3 - PayloadAct pa1_4 - PayloadAct pa1_5 - PayloadAct pa1_6 - PayloadAct e1 - ExerEquipment)
	(:functions
		(mcs_finished-inv ?ps - MedicalState ?d - Day)
		(changed-inv ?fs - FilterState ?d - Day)
		(available-inv ?c - agent)
		(done_sleep-inv ?c - agent ?d - Day)
		(done_pre_sleep-inv ?c - agent ?d - Day)
		(done_post_sleep-inv ?c - agent ?d - Day)
		(done_dpc-inv ?c - agent ?d - Day)
		(done_meal-inv ?c - agent ?d - Day)
		(done_exercise-inv ?c - agent ?d - Day)
		(done_remove_sleep_station-inv ?ps - RPCM)
		(done_first_reconfigure_thermal_loop-inv ?ps - RPCM)
		(done_replace_rpcm-inv ?ps - RPCM)
		(done_assemble_sleep_station-inv ?ps - RPCM)
		(done_second_reconfigure_thermal_loop-inv ?ps - RPCM)
		(done_rpcm-inv ?ps - RPCM ?d - Day)
		(payload_act_done-inv ?pa - PayloadAct)
		(payload_act_completed-inv ?pa - PayloadAct ?d - Day)
		(next-inv ?d1 - Day ?d2 - Day)
		(currentday-inv ?c - agent ?d - Day)
		(initiated-inv ?d - Day)
		(unused-inv ?e - ExerEquipment)
	)
	(:predicates
		(fin ?a - agent)
		(isnt-fin ?a - agent)
		(act )
		(failure )
		(mcs_finished-l ?alocal - agent ?ps - MedicalState ?d - Day)
		(changed-l ?alocal - agent ?fs - FilterState ?d - Day)
		(available-l ?alocal - agent ?c - agent)
		(done_sleep-l ?alocal - agent ?c - agent ?d - Day)
		(done_pre_sleep-l ?alocal - agent ?c - agent ?d - Day)
		(done_post_sleep-l ?alocal - agent ?c - agent ?d - Day)
		(done_dpc-l ?alocal - agent ?c - agent ?d - Day)
		(done_meal-l ?alocal - agent ?c - agent ?d - Day)
		(done_exercise-l ?alocal - agent ?c - agent ?d - Day)
		(done_remove_sleep_station-l ?alocal - agent ?ps - RPCM)
		(done_first_reconfigure_thermal_loop-l ?alocal - agent ?ps - RPCM)
		(done_replace_rpcm-l ?alocal - agent ?ps - RPCM)
		(done_assemble_sleep_station-l ?alocal - agent ?ps - RPCM)
		(done_second_reconfigure_thermal_loop-l ?alocal - agent ?ps - RPCM)
		(done_rpcm-l ?alocal - agent ?ps - RPCM ?d - Day)
		(payload_act_done-l ?alocal - agent ?pa - PayloadAct)
		(payload_act_completed-l ?alocal - agent ?pa - PayloadAct ?d - Day)
		(next-l ?alocal - agent ?d1 - Day ?d2 - Day)
		(currentday-l ?alocal - agent ?c - agent ?d - Day)
		(initiated-l ?alocal - agent ?d - Day)
		(unused-l ?alocal - agent ?e - ExerEquipment)
		(mcs_finished-g ?ps - MedicalState ?d - Day)
		(changed-g ?fs - FilterState ?d - Day)
		(available-g ?c - agent)
		(done_sleep-g ?c - agent ?d - Day)
		(done_pre_sleep-g ?c - agent ?d - Day)
		(done_post_sleep-g ?c - agent ?d - Day)
		(done_dpc-g ?c - agent ?d - Day)
		(done_meal-g ?c - agent ?d - Day)
		(done_exercise-g ?c - agent ?d - Day)
		(done_remove_sleep_station-g ?ps - RPCM)
		(done_first_reconfigure_thermal_loop-g ?ps - RPCM)
		(done_replace_rpcm-g ?ps - RPCM)
		(done_assemble_sleep_station-g ?ps - RPCM)
		(done_second_reconfigure_thermal_loop-g ?ps - RPCM)
		(done_rpcm-g ?ps - RPCM ?d - Day)
		(payload_act_done-g ?pa - PayloadAct)
		(payload_act_completed-g ?pa - PayloadAct ?d - Day)
		(next-g ?d1 - Day ?d2 - Day)
		(currentday-g ?c - agent ?d - Day)
		(initiated-g ?d - Day)
		(unused-g ?e - ExerEquipment)
	)
(:action end-c1-s
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (done_sleep-g c1 d1) (initiated-l c1 d2) (initiated-g d2) (mcs_finished-l c1 mcs2 d1) (mcs_finished-g mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-g pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-g pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-g pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-g pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-g pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (payload_act_completed-g pa1_6 d1))
	:effect (and (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c2-s
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (done_sleep-g c2 d1) (initiated-l c2 d2) (initiated-g d2) (mcs_finished-l c2 mcs2 d1) (mcs_finished-g mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-g pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-g pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-g pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-g pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-g pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (payload_act_completed-g pa1_6 d1))
	:effect (and (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c1-done_sleep-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-done_sleep-g c1 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-initiated-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-initiated-g d2))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-mcs_finished-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-mcs_finished-g mcs2 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-payload_act_completed-g pa1_1 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-payload_act_completed-g pa1_2 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-payload_act_completed-g pa1_3 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-payload_act_completed-g pa1_4 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-payload_act_completed-g pa1_5 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c1-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c1) (done_sleep-l c1 c1 d1) (initiated-l c1 d2) (mcs_finished-l c1 mcs2 d1) (payload_act_completed-l c1 pa1_1 d1) (payload_act_completed-l c1 pa1_2 d1) (payload_act_completed-l c1 pa1_3 d1) (payload_act_completed-l c1 pa1_4 d1) (payload_act_completed-l c1 pa1_5 d1) (payload_act_completed-l c1 pa1_6 d1) (isnt-payload_act_completed-g pa1_6 d1))
	:effect (and (failure ) (fin c1) (not (isnt-fin c1)) (not (act )))
)
(:action end-c2-done_sleep-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-done_sleep-g c2 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-initiated-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-initiated-g d2))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-mcs_finished-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-mcs_finished-g mcs2 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-payload_act_completed-g pa1_1 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-payload_act_completed-g pa1_2 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-payload_act_completed-g pa1_3 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-payload_act_completed-g pa1_4 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-payload_act_completed-g pa1_5 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:action end-c2-payload_act_completed-f
	:parameters ()
	:precondition (and (isnt-fin c2) (done_sleep-l c2 c2 d1) (initiated-l c2 d2) (mcs_finished-l c2 mcs2 d1) (payload_act_completed-l c2 pa1_1 d1) (payload_act_completed-l c2 pa1_2 d1) (payload_act_completed-l c2 pa1_3 d1) (payload_act_completed-l c2 pa1_4 d1) (payload_act_completed-l c2 pa1_5 d1) (payload_act_completed-l c2 pa1_6 d1) (isnt-payload_act_completed-g pa1_6 d1))
	:effect (and (failure ) (fin c2) (not (isnt-fin c2)) (not (act )))
)
(:durative-action initialize_day-s
	:parameters (?d1 - Day ?d2 - Day)
	:duration (= ?duration 1440.0)
	:condition (and (at start (act )) (at start (initiated-l ?a ?d1)) (at start (initiated-g ?d1)) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (over all (next-g ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)) (at end (next-g ?d1 ?d2)))
	:effect (and (at start (increase (next-inv ?d1 ?d2) 1  )) (at end (initiated-l ?a ?d2)) (at end (initiated-g ?d2)) (at end (decrease (next-inv ?d1 ?d2) 1  )))
)
(:durative-action post_sleep-s
	:parameters (?c - agent ?d1 - Day ?d2 - Day)
	:duration (= ?duration 195.0)
	:condition (and (at start (act )) (at start (done_sleep-l ?a ?c ?d1)) (at start (done_sleep-g ?c ?d1)) (at start (currentday-l ?a ?c ?d1)) (at start (currentday-g ?c ?d1)) (at start (initiated-l ?a ?d2)) (at start (initiated-g ?d2)) (at start (= (currentday-inv ?c ?d1 ) 0  )) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (over all (next-g ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)) (at end (next-g ?d1 ?d2)))
	:effect (and (at start (increase (next-inv ?d1 ?d2) 1  )) (at start (not (currentday-l ?a ?c ?d1))) (at start (not (currentday-g ?c ?d1))) (at end (currentday-l ?a ?c ?d2)) (at end (currentday-g ?c ?d2)) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_post_sleep-l ?a ?c ?d2)) (at end (done_post_sleep-g ?c ?d2)) (at end (decrease (next-inv ?d1 ?d2) 1  )))
)
(:durative-action have_meal-s
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (done_post_sleep-g ?c ?d)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_meal-l ?a ?c ?d)) (at end (done_meal-g ?c ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action exercise-s
	:parameters (?c - agent ?d - Day ?e - ExerEquipment)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (done_post_sleep-g ?c ?d)) (at start (unused-l ?a ?e)) (at start (unused-g ?e)) (at start (= (available-inv ?c ) 0  )) (at start (= (unused-inv ?e ) 0  )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at start (not (unused-l ?a ?e))) (at start (not (unused-g ?e))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (unused-l ?a ?e)) (at end (unused-g ?e)) (at end (done_exercise-l ?a ?c ?d)) (at end (done_exercise-g ?c ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action sleep-s
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 600.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_exercise-l ?a ?c ?d)) (at start (done_exercise-g ?c ?d)) (at start (done_meal-l ?a ?c ?d)) (at start (done_meal-g ?c ?d)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (done_sleep-l ?a ?c ?d)) (at end (done_sleep-g ?c ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action change_filter-s
	:parameters (?fs - FilterState ?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (changed-l ?a ?fs ?d)) (at end (changed-g ?fs ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action medical_conference-s
	:parameters (?ps - MedicalState ?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (mcs_finished-l ?a ?ps ?d)) (at end (mcs_finished-g ?ps ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action conduct_payload_activity-s
	:parameters (?pa - PayloadAct ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (payload_act_done-l ?a ?pa)) (at end (payload_act_done-g ?pa)))
)
(:durative-action report_payload_activity_at_deadline-s
	:parameters (?pa - PayloadAct ?c - agent ?d - Day)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (payload_act_done-l ?a ?pa)) (at start (payload_act_done-g ?pa)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at end (payload_act_completed-l ?a ?pa ?d)) (at end (payload_act_completed-g ?pa ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action first_reconfigurate_thermal_loops-s
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_first_reconfigure_thermal_loop-l ?a ?ps)) (at end (done_first_reconfigure_thermal_loop-g ?ps)))
)
(:durative-action remove_sleep_station-s
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_remove_sleep_station-l ?a ?ps)) (at end (done_remove_sleep_station-g ?ps)))
)
(:durative-action replace_rpcm-s
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 180.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_remove_sleep_station-l ?a ?ps)) (at start (done_remove_sleep_station-g ?ps)) (at start (done_first_reconfigure_thermal_loop-l ?a ?ps)) (at start (done_first_reconfigure_thermal_loop-g ?ps)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_replace_rpcm-l ?a ?ps)) (at end (done_replace_rpcm-g ?ps)))
)
(:durative-action assemble_sleep_station-s
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (done_replace_rpcm-g ?ps)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_assemble_sleep_station-l ?a ?ps)) (at end (done_assemble_sleep_station-g ?ps)))
)
(:durative-action second_reconfigurate_thermal_loops-s
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (done_replace_rpcm-g ?ps)) (at start (= (available-inv ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (available-l ?a ?c))) (at start (not (available-g ?c))) (at end (available-l ?a ?c)) (at end (available-g ?c)) (at end (done_second_reconfigure_thermal_loop-l ?a ?ps)) (at end (done_second_reconfigure_thermal_loop-g ?ps)))
)
(:durative-action finish_rpcm-s
	:parameters (?ps - RPCM ?c - agent ?d - Day)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (done_assemble_sleep_station-l ?a ?ps)) (at start (done_assemble_sleep_station-g ?ps)) (at start (done_second_reconfigure_thermal_loop-l ?a ?ps)) (at start (done_second_reconfigure_thermal_loop-g ?ps)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (over all (currentday-g ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)) (at end (currentday-g ?c ?d)))
	:effect (and (at start (increase (currentday-inv ?c ?d) 1  )) (at end (done_rpcm-l ?a ?ps ?d)) (at end (done_rpcm-g ?ps ?d)) (at end (decrease (currentday-inv ?c ?d) 1  )))
)
(:durative-action initialize_day-f-start-1
	:parameters (?d1 - Day ?d2 - Day)
	:duration (= ?duration 1440.0)
	:condition (and (at start (act )) (at start (initiated-l ?a ?d1)) (at start (isnt-initiated-g ?d1)) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)))
	:effect (and (at start (failure )) (at end (initiated-l ?a ?d2)))
)
(:durative-action post_sleep-f-start-1
	:parameters (?c - agent ?d1 - Day ?d2 - Day)
	:duration (= ?duration 195.0)
	:condition (and (at start (act )) (at start (done_sleep-l ?a ?c ?d1)) (at start (currentday-l ?a ?c ?d1)) (at start (initiated-l ?a ?d2)) (at start (isnt-done_sleep-g ?c ?d1)) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)))
	:effect (and (at start (failure )) (at start (not (currentday-l ?a ?c ?d1))) (at end (currentday-l ?a ?c ?d2)) (at end (available-l ?a ?c)) (at end (done_post_sleep-l ?a ?c ?d2)))
)
(:durative-action post_sleep-f-start-2
	:parameters (?c - agent ?d1 - Day ?d2 - Day)
	:duration (= ?duration 195.0)
	:condition (and (at start (act )) (at start (done_sleep-l ?a ?c ?d1)) (at start (currentday-l ?a ?c ?d1)) (at start (initiated-l ?a ?d2)) (at start (isnt-currentday-g ?c ?d1)) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)))
	:effect (and (at start (failure )) (at start (not (currentday-l ?a ?c ?d1))) (at end (currentday-l ?a ?c ?d2)) (at end (available-l ?a ?c)) (at end (done_post_sleep-l ?a ?c ?d2)))
)
(:durative-action post_sleep-f-start-3
	:parameters (?c - agent ?d1 - Day ?d2 - Day)
	:duration (= ?duration 195.0)
	:condition (and (at start (act )) (at start (done_sleep-l ?a ?c ?d1)) (at start (currentday-l ?a ?c ?d1)) (at start (initiated-l ?a ?d2)) (at start (isnt-initiated-g ?d2)) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)))
	:effect (and (at start (failure )) (at start (not (currentday-l ?a ?c ?d1))) (at end (currentday-l ?a ?c ?d2)) (at end (available-l ?a ?c)) (at end (done_post_sleep-l ?a ?c ?d2)))
)
(:durative-action have_meal-f-start-1
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (isnt-available-g ?c)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_meal-l ?a ?c ?d)))
)
(:durative-action have_meal-f-start-2
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (isnt-done_post_sleep-g ?c ?d)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_meal-l ?a ?c ?d)))
)
(:durative-action exercise-f-start-1
	:parameters (?c - agent ?d - Day ?e - ExerEquipment)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (unused-l ?a ?e)) (at start (isnt-available-g ?c)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at start (not (unused-l ?a ?e))) (at end (available-l ?a ?c)) (at end (unused-l ?a ?e)) (at end (done_exercise-l ?a ?c ?d)))
)
(:durative-action exercise-f-start-2
	:parameters (?c - agent ?d - Day ?e - ExerEquipment)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (unused-l ?a ?e)) (at start (isnt-done_post_sleep-g ?c ?d)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at start (not (unused-l ?a ?e))) (at end (available-l ?a ?c)) (at end (unused-l ?a ?e)) (at end (done_exercise-l ?a ?c ?d)))
)
(:durative-action exercise-f-start-3
	:parameters (?c - agent ?d - Day ?e - ExerEquipment)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (unused-l ?a ?e)) (at start (isnt-unused-g ?e)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at start (not (unused-l ?a ?e))) (at end (available-l ?a ?c)) (at end (unused-l ?a ?e)) (at end (done_exercise-l ?a ?c ?d)))
)
(:durative-action sleep-f-start-1
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 600.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_exercise-l ?a ?c ?d)) (at start (done_meal-l ?a ?c ?d)) (at start (isnt-available-g ?c)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (done_sleep-l ?a ?c ?d)))
)
(:durative-action sleep-f-start-2
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 600.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_exercise-l ?a ?c ?d)) (at start (done_meal-l ?a ?c ?d)) (at start (isnt-done_exercise-g ?c ?d)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (done_sleep-l ?a ?c ?d)))
)
(:durative-action sleep-f-start-3
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 600.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_exercise-l ?a ?c ?d)) (at start (done_meal-l ?a ?c ?d)) (at start (isnt-done_meal-g ?c ?d)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (done_sleep-l ?a ?c ?d)))
)
(:durative-action change_filter-f-start-1
	:parameters (?fs - FilterState ?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (isnt-available-g ?c)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (changed-l ?a ?fs ?d)))
)
(:durative-action medical_conference-f-start-1
	:parameters (?ps - MedicalState ?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (isnt-available-g ?c)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (mcs_finished-l ?a ?ps ?d)))
)
(:durative-action conduct_payload_activity-f-start-1
	:parameters (?pa - PayloadAct ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (isnt-available-g ?c)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (payload_act_done-l ?a ?pa)))
)
(:durative-action report_payload_activity_at_deadline-f-start-1
	:parameters (?pa - PayloadAct ?c - agent ?d - Day)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (payload_act_done-l ?a ?pa)) (at start (isnt-payload_act_done-g ?pa)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at end (payload_act_completed-l ?a ?pa ?d)))
)
(:durative-action first_reconfigurate_thermal_loops-f-start-1
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (isnt-available-g ?c)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_first_reconfigure_thermal_loop-l ?a ?ps)))
)
(:durative-action remove_sleep_station-f-start-1
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (isnt-available-g ?c)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_remove_sleep_station-l ?a ?ps)))
)
(:durative-action replace_rpcm-f-start-1
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 180.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_remove_sleep_station-l ?a ?ps)) (at start (done_first_reconfigure_thermal_loop-l ?a ?ps)) (at start (isnt-available-g ?c)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_replace_rpcm-l ?a ?ps)))
)
(:durative-action replace_rpcm-f-start-2
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 180.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_remove_sleep_station-l ?a ?ps)) (at start (done_first_reconfigure_thermal_loop-l ?a ?ps)) (at start (isnt-done_remove_sleep_station-g ?ps)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_replace_rpcm-l ?a ?ps)))
)
(:durative-action replace_rpcm-f-start-3
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 180.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_remove_sleep_station-l ?a ?ps)) (at start (done_first_reconfigure_thermal_loop-l ?a ?ps)) (at start (isnt-done_first_reconfigure_thermal_loop-g ?ps)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_replace_rpcm-l ?a ?ps)))
)
(:durative-action assemble_sleep_station-f-start-1
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (isnt-available-g ?c)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_assemble_sleep_station-l ?a ?ps)))
)
(:durative-action assemble_sleep_station-f-start-2
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (isnt-done_replace_rpcm-g ?ps)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_assemble_sleep_station-l ?a ?ps)))
)
(:durative-action second_reconfigurate_thermal_loops-f-start-1
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (isnt-available-g ?c)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_second_reconfigure_thermal_loop-l ?a ?ps)))
)
(:durative-action second_reconfigurate_thermal_loops-f-start-2
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (isnt-done_replace_rpcm-g ?ps)) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_second_reconfigure_thermal_loop-l ?a ?ps)))
)
(:durative-action finish_rpcm-f-start-1
	:parameters (?ps - RPCM ?c - agent ?d - Day)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (done_assemble_sleep_station-l ?a ?ps)) (at start (done_second_reconfigure_thermal_loop-l ?a ?ps)) (at start (isnt-done_assemble_sleep_station-g ?ps)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at end (done_rpcm-l ?a ?ps ?d)))
)
(:durative-action finish_rpcm-f-start-2
	:parameters (?ps - RPCM ?c - agent ?d - Day)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (done_assemble_sleep_station-l ?a ?ps)) (at start (done_second_reconfigure_thermal_loop-l ?a ?ps)) (at start (isnt-done_second_reconfigure_thermal_loop-g ?ps)) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at end (done_rpcm-l ?a ?ps ?d)))
)
(:durative-action post_sleep-f-inv-start
	:parameters (?c - agent ?d1 - Day ?d2 - Day)
	:duration (= ?duration 195.0)
	:condition (and (at start (act )) (at start (done_sleep-l ?a ?c ?d1)) (at start (done_sleep-g ?c ?d1)) (at start (currentday-l ?a ?c ?d1)) (at start (currentday-g ?c ?d1)) (at start (initiated-l ?a ?d2)) (at start (initiated-g ?d2)) (at start (> (currentday-inv ?c ?d1) 0 )) (over all (act )) (over all (next-l ?a ?d1 ?d2)) (at end (act )) (at end (next-l ?a ?d1 ?d2)))
	:effect (and (at start (failure )) (at start (not (currentday-l ?a ?c ?d1))) (at end (currentday-l ?a ?c ?d2)) (at end (available-l ?a ?c)) (at end (done_post_sleep-l ?a ?c ?d2)))
)
(:durative-action have_meal-f-inv-start
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (done_post_sleep-g ?c ?d)) (at start (> (available-inv ?c) 0 )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_meal-l ?a ?c ?d)))
)
(:durative-action exercise-f-inv-start
	:parameters (?c - agent ?d - Day ?e - ExerEquipment)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_post_sleep-l ?a ?c ?d)) (at start (done_post_sleep-g ?c ?d)) (at start (unused-l ?a ?e)) (at start (unused-g ?e)) (at start (> (+ (unused-inv ?e) (available-inv ?c) ) 0 )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at start (not (unused-l ?a ?e))) (at end (available-l ?a ?c)) (at end (unused-l ?a ?e)) (at end (done_exercise-l ?a ?c ?d)))
)
(:durative-action sleep-f-inv-start
	:parameters (?c - agent ?d - Day)
	:duration (= ?duration 600.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_exercise-l ?a ?c ?d)) (at start (done_exercise-g ?c ?d)) (at start (done_meal-l ?a ?c ?d)) (at start (done_meal-g ?c ?d)) (at start (> (available-inv ?c) 0 )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (done_sleep-l ?a ?c ?d)))
)
(:durative-action change_filter-f-inv-start
	:parameters (?fs - FilterState ?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (> (available-inv ?c) 0 )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (changed-l ?a ?fs ?d)))
)
(:durative-action medical_conference-f-inv-start
	:parameters (?ps - MedicalState ?c - agent ?d - Day)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (> (available-inv ?c) 0 )) (over all (act )) (over all (currentday-l ?a ?c ?d)) (at end (act )) (at end (currentday-l ?a ?c ?d)))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (mcs_finished-l ?a ?ps ?d)))
)
(:durative-action conduct_payload_activity-f-inv-start
	:parameters (?pa - PayloadAct ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (> (available-inv ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (payload_act_done-l ?a ?pa)))
)
(:durative-action first_reconfigurate_thermal_loops-f-inv-start
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (> (available-inv ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_first_reconfigure_thermal_loop-l ?a ?ps)))
)
(:durative-action remove_sleep_station-f-inv-start
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (> (available-inv ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_remove_sleep_station-l ?a ?ps)))
)
(:durative-action replace_rpcm-f-inv-start
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 180.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_remove_sleep_station-l ?a ?ps)) (at start (done_remove_sleep_station-g ?ps)) (at start (done_first_reconfigure_thermal_loop-l ?a ?ps)) (at start (done_first_reconfigure_thermal_loop-g ?ps)) (at start (> (available-inv ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_replace_rpcm-l ?a ?ps)))
)
(:durative-action assemble_sleep_station-f-inv-start
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (done_replace_rpcm-g ?ps)) (at start (> (available-inv ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_assemble_sleep_station-l ?a ?ps)))
)
(:durative-action second_reconfigurate_thermal_loops-f-inv-start
	:parameters (?ps - RPCM ?c - agent)
	:duration (= ?duration 60.0)
	:condition (and (at start (act )) (at start (available-l ?a ?c)) (at start (available-g ?c)) (at start (done_replace_rpcm-l ?a ?ps)) (at start (done_replace_rpcm-g ?ps)) (at start (> (available-inv ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (available-l ?a ?c))) (at end (available-l ?a ?c)) (at end (done_second_reconfigure_thermal_loop-l ?a ?ps)))
)
)