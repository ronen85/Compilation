(define (domain cdrink-world)
	(:requirements :typing :negative-preconditions :fluents)
	(:types cup agent)
	(:constants cup1 - cup person1 - agent person2 - agent)
	(:functions
		(thirsty-inv ?a - agent)
		(isnt-thirsty-inv ?a - agent)
		(hold-cup-inv ?a - agent ?c - cup)
		(isnt-hold-cup-inv ?a - agent ?c - cup)
		(clear-inv ?a - agent)
		(isnt-clear-inv ?a - agent)
		(on-table-inv ?c - cup)
		(isnt-on-table-inv ?c - cup)
		(full-inv ?c - cup)
		(isnt-full-inv ?c - cup)
	)
	(:predicates
		(fin ?a - agent)
		(isnt-fin ?a - agent)
		(act )
		(failure )
		(thirsty-l ?alocal - agent ?a - agent)
		(isnt-thirsty-l ?alocal - agent ?a - agent)
		(hold-cup-l ?alocal - agent ?a - agent ?c - cup)
		(isnt-hold-cup-l ?alocal - agent ?a - agent ?c - cup)
		(clear-l ?alocal - agent ?a - agent)
		(isnt-clear-l ?alocal - agent ?a - agent)
		(on-table-l ?alocal - agent ?c - cup)
		(isnt-on-table-l ?alocal - agent ?c - cup)
		(full-l ?alocal - agent ?c - cup)
		(isnt-full-l ?alocal - agent ?c - cup)
		(thirsty-g ?a - agent)
		(isnt-thirsty-g ?a - agent)
		(hold-cup-g ?a - agent ?c - cup)
		(isnt-hold-cup-g ?a - agent ?c - cup)
		(clear-g ?a - agent)
		(isnt-clear-g ?a - agent)
		(on-table-g ?c - cup)
		(isnt-on-table-g ?c - cup)
		(full-g ?c - cup)
		(isnt-full-g ?c - cup)
		(on-table-checked ?c - cup)
		(on-table-wt ?alocal - agent ?c - cup)
		(on-table-not-wt ?alocal - agent ?c - cup)
	)
(:action end-person1-s
	:parameters ()
	:precondition (and (isnt-fin person1) (isnt-thirsty-l person1 person1) (isnt-thirsty-g person1))
	:effect (and (fin person1) (not (isnt-fin person1)) (not (act )))
)
(:action end-person2-s
	:parameters ()
	:precondition (and (isnt-fin person2) (isnt-thirsty-l person2 person2) (isnt-thirsty-g person2))
	:effect (and (fin person2) (not (isnt-fin person2)) (not (act )))
)
(:action end-person1-isnt-thirsty-f
	:parameters ()
	:precondition (and (isnt-fin person1) (isnt-thirsty-l person1 person1) (thirsty-g person1))
	:effect (and (failure ) (fin person1) (not (isnt-fin person1)) (not (act )))
)
(:action end-person2-isnt-thirsty-f
	:parameters ()
	:precondition (and (isnt-fin person2) (isnt-thirsty-l person2 person2) (thirsty-g person2))
	:effect (and (failure ) (fin person2) (not (isnt-fin person2)) (not (act )))
)
(:durative-action take-cup-s
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (clear-l ?a ?a)) (at start (clear-g ?a)) (at start (on-table-l ?a ?c)) (at start (on-table-g ?c)) (at start (= (clear-inv ?a ) 0  )) (at start (= (on-table-inv ?c ) 0  )) (at start (= (isnt-hold-cup-inv ?a ?c ) 0  )) (over all (act )) (at end (act )))
	:effect (and (at start (not (clear-l ?a ?a))) (at start (not (clear-g ?a))) (at start (not (on-table-l ?a ?c))) (at start (not (on-table-g ?c))) (at start (not (isnt-hold-cup-l ?a ?a ?c))) (at start (not (isnt-hold-cup-g ?a ?c))) (at end (isnt-clear-l ?a ?a)) (at end (isnt-clear-g ?a)) (at end (isnt-on-table-l ?a ?c)) (at end (isnt-on-table-g ?c)) (at end (hold-cup-l ?a ?a ?c)) (at end (hold-cup-g ?a ?c)))
)
(:durative-action return-cup-s
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (isnt-full-g ?c)) (at start (= (hold-cup-inv ?a ?c ) 0  )) (over all (act )) (at end (act )) (at end (= (isnt-on-table-inv ?c ) 0  )) (at end (= (isnt-clear-inv ?a ) 0  )) (at start (on-table-not-wt person1 ?c)) (at start (on-table-not-wt person2 ?c)) (over all (on-table-not-wt person1 ?c)) (over all (on-table-not-wt person2 ?c)) (at end (on-table-not-wt person1 ?c)) (at end (on-table-not-wt person2 ?c)))
	:effect (and (at start (not (hold-cup-l ?a ?a ?c))) (at start (not (hold-cup-g ?a ?c))) (at end (isnt-hold-cup-l ?a ?a ?c)) (at end (isnt-hold-cup-g ?a ?c)) (at end (on-table-l ?a ?c)) (at end (on-table-g ?c)) (at end (clear-l ?a ?a)) (at end (clear-g ?a)) (at end (not (isnt-on-table-l ?a ?c))) (at end (not (isnt-on-table-g ?c))) (at end (not (isnt-clear-l ?a ?a))) (at end (not (isnt-clear-g ?a))))
)
(:durative-action drink-cup-s
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (full-l ?a ?c)) (at start (full-g ?c)) (at start (thirsty-l ?a ?a)) (at start (thirsty-g ?a)) (at start (= (full-inv ?c ) 0  )) (at start (= (thirsty-inv ?a ) 0  )) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (over all (hold-cup-g ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)) (at end (hold-cup-g ?a ?c)))
	:effect (and (at start (increase (hold-cup-inv ?a ?c) 1  )) (at start (not (full-l ?a ?c))) (at start (not (full-g ?c))) (at start (not (thirsty-l ?a ?a))) (at start (not (thirsty-g ?a))) (at end (isnt-full-l ?a ?c)) (at end (isnt-full-g ?c)) (at end (isnt-thirsty-l ?a ?a)) (at end (isnt-thirsty-g ?a)) (at start (decrease (hold-cup-inv ?a ?c) 1  )))
)
(:durative-action fill-cup-s
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (isnt-full-g ?c)) (at start (= (isnt-full-inv ?c ) 0  )) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (over all (hold-cup-g ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)) (at end (hold-cup-g ?a ?c)))
	:effect (and (at start (increase (hold-cup-inv ?a ?c) 1  )) (at start (not (isnt-full-l ?a ?c))) (at start (not (isnt-full-g ?c))) (at end (full-l ?a ?c)) (at end (full-g ?c)) (at start (decrease (hold-cup-inv ?a ?c) 1  )))
)
(:durative-action take-cup-f-start-1
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (on-table-l ?a ?c)) (at start (on-table-g ?c)) (at start (clear-l ?a ?a)) (at start (not (clear-g ?a))) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (clear-l ?a ?a))) (at start (not (on-table-l ?a ?c))) (at start (not (isnt-hold-cup-l ?a ?a ?c))) (at end (isnt-clear-l ?a ?a)) (at end (isnt-on-table-l ?a ?c)) (at end (hold-cup-l ?a ?a ?c)))
)
(:durative-action return-cup-f-start-1
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (not (hold-cup-g ?a ?c))) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (hold-cup-l ?a ?a ?c))) (at end (isnt-hold-cup-l ?a ?a ?c)) (at end (on-table-l ?a ?c)) (at end (clear-l ?a ?a)) (at end (not (isnt-on-table-l ?a ?c))) (at end (not (isnt-clear-l ?a ?a))))
)
(:durative-action return-cup-f-start-2
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (not (isnt-full-g ?c))) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (hold-cup-l ?a ?a ?c))) (at end (isnt-hold-cup-l ?a ?a ?c)) (at end (on-table-l ?a ?c)) (at end (clear-l ?a ?a)) (at end (not (isnt-on-table-l ?a ?c))) (at end (not (isnt-clear-l ?a ?a))))
)
(:durative-action drink-cup-f-start-1
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (full-l ?a ?c)) (at start (thirsty-l ?a ?a)) (at start (not (hold-cup-g ?a ?c))) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (full-l ?a ?c))) (at start (not (thirsty-l ?a ?a))) (at end (isnt-full-l ?a ?c)) (at end (isnt-thirsty-l ?a ?a)))
)
(:durative-action drink-cup-f-start-2
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (full-l ?a ?c)) (at start (thirsty-l ?a ?a)) (at start (not (full-g ?c))) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (full-l ?a ?c))) (at start (not (thirsty-l ?a ?a))) (at end (isnt-full-l ?a ?c)) (at end (isnt-thirsty-l ?a ?a)))
)
(:durative-action drink-cup-f-start-3
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (full-l ?a ?c)) (at start (thirsty-l ?a ?a)) (at start (not (thirsty-g ?a))) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (full-l ?a ?c))) (at start (not (thirsty-l ?a ?a))) (at end (isnt-full-l ?a ?c)) (at end (isnt-thirsty-l ?a ?a)))
)
(:durative-action fill-cup-f-start-1
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (not (hold-cup-g ?a ?c))) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (isnt-full-l ?a ?c))) (at end (full-l ?a ?c)))
)
(:durative-action fill-cup-f-start-2
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (not (isnt-full-g ?c))) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (isnt-full-l ?a ?c))) (at end (full-l ?a ?c)))
)
(:durative-action drink-cup-f-end-1
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (full-l ?a ?c)) (at start (full-g ?c)) (at start (thirsty-l ?a ?a)) (at start (thirsty-g ?a)) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (over all (hold-cup-g ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)) (at end (not (hold-cup-g ?a ?c))))
	:effect (and (at start (not (full-l ?a ?c))) (at start (not (full-g ?c))) (at start (not (thirsty-l ?a ?a))) (at start (not (thirsty-g ?a))) (at end (isnt-full-l ?a ?c)) (at end (isnt-thirsty-l ?a ?a)) (at end (failure )))
)
(:durative-action fill-cup-f-end-1
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (isnt-full-g ?c)) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (over all (hold-cup-g ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)) (at end (not (hold-cup-g ?a ?c))))
	:effect (and (at start (not (isnt-full-l ?a ?c))) (at start (not (isnt-full-g ?c))) (at end (full-l ?a ?c)) (at end (failure )))
)
(:durative-action take-cup-f-inv-start
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (clear-l ?a ?a)) (at start (clear-g ?a)) (at start (on-table-l ?a ?c)) (at start (on-table-g ?c)) (at start (> (+ (+ (isnt-hold-cup-inv ?a ?c) (on-table-inv ?c) ) (clear-inv ?a) ) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (clear-l ?a ?a))) (at start (not (on-table-l ?a ?c))) (at start (not (isnt-hold-cup-l ?a ?a ?c))) (at end (isnt-clear-l ?a ?a)) (at end (isnt-on-table-l ?a ?c)) (at end (hold-cup-l ?a ?a ?c)))
)
(:durative-action return-cup-f-inv-start
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (isnt-full-g ?c)) (at start (> (hold-cup-inv ?a ?c) 0 )) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (not (hold-cup-l ?a ?a ?c))) (at end (isnt-hold-cup-l ?a ?a ?c)) (at end (on-table-l ?a ?c)) (at end (clear-l ?a ?a)) (at end (not (isnt-on-table-l ?a ?c))) (at end (not (isnt-clear-l ?a ?a))))
)
(:durative-action drink-cup-f-inv-start
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (full-l ?a ?c)) (at start (full-g ?c)) (at start (thirsty-l ?a ?a)) (at start (thirsty-g ?a)) (at start (> (+ (thirsty-inv ?a) (full-inv ?c) ) 0 )) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (full-l ?a ?c))) (at start (not (thirsty-l ?a ?a))) (at end (isnt-full-l ?a ?c)) (at end (isnt-thirsty-l ?a ?a)))
)
(:durative-action fill-cup-f-inv-start
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (isnt-full-g ?c)) (at start (> (isnt-full-inv ?c) 0 )) (over all (act )) (over all (hold-cup-l ?a ?a ?c)) (at end (act )) (at end (hold-cup-l ?a ?a ?c)))
	:effect (and (at start (failure )) (at start (not (isnt-full-l ?a ?c))) (at end (full-l ?a ?c)))
)
(:durative-action return-cup-f-inv-end
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (hold-cup-l ?a ?a ?c)) (at start (hold-cup-g ?a ?c)) (at start (isnt-full-l ?a ?c)) (at start (isnt-full-g ?c)) (at start (= (hold-cup-inv ?a ?c ) 0  )) (over all (act )) (at end (act )) (at end (> (+ (isnt-clear-inv ?a) (isnt-on-table-inv ?c) ) 0 )))
	:effect (and (at start (not (hold-cup-l ?a ?a ?c))) (at start (not (hold-cup-g ?a ?c))) (at end (isnt-hold-cup-l ?a ?a ?c)) (at end (on-table-l ?a ?c)) (at end (clear-l ?a ?a)) (at end (failure )) (at end (not (isnt-on-table-l ?a ?c))) (at end (not (isnt-clear-l ?a ?a))))
)
(:durative-action take-cup-wait-on-table
	:parameters (?a - agent ?c - cup)
	:duration (= ?duration 1.0)
	:condition (and (at start (act )) (at start (clear-l ?a ?a)) (at start (on-table-l ?a ?c)) (at start (not (on-table-g ?c))) (over all (act )) (at end (act )))
	:effect (and (at start (failure )) (at start (on-table-wt ?a ?c)) (at start (not (clear-l ?a ?a))) (at start (not (on-table-l ?a ?c))) (at start (not (isnt-hold-cup-l ?a ?a ?c))) (at start (not (on-table-not-wt ?a ?c))) (at end (isnt-clear-l ?a ?a)) (at end (isnt-on-table-l ?a ?c)) (at end (hold-cup-l ?a ?a ?c)))
)
)